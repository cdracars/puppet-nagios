define service{ 
name generic_service ; The 'name' of this service template 
active_checks_enabled 1 ; Active service checks are enabled 
passive_checks_enabled 1 ; Passive service checks are enabled/accepted 
parallelize_check 1 ; Active service checks should be parallelized (disabling this can lead to major performance problems) 
obsess_over_service 1 ; We should obsess over this service (if necessary) 
check_freshness 0 ; Default is to NOT check service 'freshness' 
notifications_enabled 1 ; Service notifications are enabled 
event_handler_enabled 1 ; Service event handler is enabled
flap_detection_enabled 1 ; Flap detection is enabled 
failure_prediction_enabled 1 ; Failure prediction is enabled 
process_perf_data 1 ; Process performance data 
retain_status_information 1 ; Retain status information across program restarts 
retain_nonstatus_information 1 ; Retain non-status information across program restarts 
notification_interval 0 ; Only send notifications on status change by default. i
is_volatile 0 
check_period 24x7 
normal_check_interval 5 
retry_check_interval 2 
max_check_attempts 3 
notification_period 24x7 
notification_options c,r 
contact_groups sysadmin 
register 0 ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE! 
} 

#Nagios monitoring serverNagios monitoring serverdeploying, steps# Defaults 
define service { 
name every_5_mins 
normal_check_interval 5 
use generic_service 
register 0 
} 

define service { 
name every_hour 
normal_check_interval 60 
use generic_service 
register 0 
} 

define service { 
name every_day 
normal_check_interval 1440 
use generic_service 
register 0 
}

